{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Web%20Engineering/gym-store/src/app/admin/layout.js"],"sourcesContent":["'use client'; // This allows us to use client-side features\r\n\r\n// Import necessary components\r\nimport { useState, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport { useRouter, usePathname } from 'next/navigation';\r\n\r\n// Admin layout wraps all admin pages\r\nexport default function AdminLayout({ children }) {\r\n  // For navigation\r\n  const router = useRouter();\r\n  const pathname = usePathname();\r\n\r\n  // State for admin authentication\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Check if admin is logged in on component mount\r\n  useEffect(() => {\r\n    // In a real app, you would check a token in localStorage or cookies\r\n    const adminToken = localStorage.getItem('adminToken');\r\n\r\n    if (adminToken) {\r\n      setIsAuthenticated(true);\r\n    } else {\r\n      // If not logged in and not on login page, redirect to login\r\n      if (pathname !== '/admin/login') {\r\n        router.push('/admin/login');\r\n      }\r\n    }\r\n\r\n    setIsLoading(false);\r\n  }, [pathname, router]);\r\n\r\n  // If still loading, show a loading message\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\r\n        <p className=\"text-xl text-teal-800\">Loading admin panel...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // If on login page or not authenticated, just show the content (login form)\r\n  if (pathname === '/admin/login' || !isAuthenticated) {\r\n    return <>{children}</>;\r\n  }\r\n\r\n  // Function to handle logout\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('adminToken');\r\n    setIsAuthenticated(false);\r\n    router.push('/admin/login');\r\n  };\r\n\r\n  // Admin navigation items\r\n  const navItems = [\r\n    { name: 'Dashboard', path: '/admin' },\r\n    { name: 'Products', path: '/admin/products' },\r\n    { name: 'Orders', path: '/admin/orders' },\r\n    { name: 'Settings', path: '/admin/settings' },\r\n  ];\r\n\r\n  // Authenticated admin layout with sidebar\r\n  return (\r\n    <div className=\"flex h-screen bg-gray-100\">\r\n      {/* Sidebar for admin navigation */}\r\n      <div className=\"w-64 bg-teal-800 text-white\">\r\n        <div className=\"p-4 border-b border-teal-700\">\r\n          <h1 className=\"text-2xl font-bold\">Profein Admin</h1>\r\n        </div>\r\n\r\n        {/* Navigation items */}\r\n        <nav className=\"mt-4\">\r\n          <ul>\r\n            {navItems.map((item) => (\r\n              <li key={item.path}>\r\n                <Link\r\n                  href={item.path}\r\n                  className={`block px-4 py-2 hover:bg-teal-700 ${pathname === item.path ? 'bg-teal-700 font-bold' : ''\r\n                    }`}\r\n                >\r\n                  {item.name}\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </nav>\r\n\r\n        {/* Back to store & logout buttons */}\r\n        <div className=\"absolute bottom-0 w-64 border-t border-teal-700\">\r\n          <Link\r\n            href=\"/\"\r\n            className=\"block px-4 py-2 text-teal-100 hover:bg-teal-700\"\r\n          >\r\n            Back to Store\r\n          </Link>\r\n          <button\r\n            onClick={handleLogout}\r\n            className=\"block w-full text-left px-4 py-2 text-orange-400 hover:bg-teal-700\"\r\n          >\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main content area */}\r\n      <div className=\"flex-1 overflow-auto\">\r\n        <div className=\"p-6\">\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA,8BAA8B;AAC9B;AACA;AACA;;;AALA,cAAc,6CAA6C;;;;AAQ5C,SAAS,YAAY,EAAE,QAAQ,EAAE;;IAC9C,iBAAiB;IACjB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,WAAW,CAAA,GAAA,qIAAA,CAAA,cAAW,AAAD;IAE3B,iCAAiC;IACjC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,iDAAiD;IACjD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR,oEAAoE;YACpE,MAAM,aAAa,aAAa,OAAO,CAAC;YAExC,IAAI,YAAY;gBACd,mBAAmB;YACrB,OAAO;gBACL,4DAA4D;gBAC5D,IAAI,aAAa,gBAAgB;oBAC/B,OAAO,IAAI,CAAC;gBACd;YACF;YAEA,aAAa;QACf;gCAAG;QAAC;QAAU;KAAO;IAErB,2CAA2C;IAC3C,IAAI,WAAW;QACb,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAE,WAAU;0BAAwB;;;;;;;;;;;IAG3C;IAEA,4EAA4E;IAC5E,IAAI,aAAa,kBAAkB,CAAC,iBAAiB;QACnD,qBAAO;sBAAG;;IACZ;IAEA,4BAA4B;IAC5B,MAAM,eAAe;QACnB,aAAa,UAAU,CAAC;QACxB,mBAAmB;QACnB,OAAO,IAAI,CAAC;IACd;IAEA,yBAAyB;IACzB,MAAM,WAAW;QACf;YAAE,MAAM;YAAa,MAAM;QAAS;QACpC;YAAE,MAAM;YAAY,MAAM;QAAkB;QAC5C;YAAE,MAAM;YAAU,MAAM;QAAgB;QACxC;YAAE,MAAM;YAAY,MAAM;QAAkB;KAC7C;IAED,0CAA0C;IAC1C,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAG,WAAU;sCAAqB;;;;;;;;;;;kCAIrC,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;sCACE,SAAS,GAAG,CAAC,CAAC,qBACb,6LAAC;8CACC,cAAA,6LAAC,+JAAA,CAAA,UAAI;wCACH,MAAM,KAAK,IAAI;wCACf,WAAW,CAAC,kCAAkC,EAAE,aAAa,KAAK,IAAI,GAAG,0BAA0B,IAC/F;kDAEH,KAAK,IAAI;;;;;;mCANL,KAAK,IAAI;;;;;;;;;;;;;;;kCAcxB,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,+JAAA,CAAA,UAAI;gCACH,MAAK;gCACL,WAAU;0CACX;;;;;;0CAGD,6LAAC;gCACC,SAAS;gCACT,WAAU;0CACX;;;;;;;;;;;;;;;;;;0BAOL,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;8BACZ;;;;;;;;;;;;;;;;;AAKX;GA1GwB;;QAEP,qIAAA,CAAA,YAAS;QACP,qIAAA,CAAA,cAAW;;;KAHN","debugId":null}},
    {"offset": {"line": 219, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Web%20Engineering/gym-store/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}
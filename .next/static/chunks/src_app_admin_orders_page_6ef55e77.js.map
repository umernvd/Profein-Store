{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Web%20Engineering/gym-store/src/app/admin/orders/page.js"],"sourcesContent":["'use client'; // Enable client-side features\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport Link from 'next/link';\r\n\r\n// Admin Orders Management Page\r\nexport default function AdminOrders() {\r\n  // States for orders and UI\r\n  const [orders, setOrders] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [statusFilter, setStatusFilter] = useState('all');\r\n\r\n  // Load orders on component mount\r\n  useEffect(() => {\r\n    // In a real app, you would fetch this data from an API\r\n    // For this demo, we'll use some sample orders\r\n    const fetchOrders = () => {\r\n      // Sample orders data\r\n      const sampleOrders = [\r\n        {\r\n          id: 'ORD-7851',\r\n          customer: 'John Doe',\r\n          email: 'john@example.com',\r\n          date: '2023-10-12',\r\n          amount: 299.99,\r\n          status: 'Delivered',\r\n          items: [\r\n            { id: 1, name: 'Premium Dumbbell Set', quantity: 1, price: 299.99 }\r\n          ]\r\n        },\r\n        {\r\n          id: 'ORD-7850',\r\n          customer: 'Jane Smith',\r\n          email: 'jane@example.com',\r\n          date: '2023-10-11',\r\n          amount: 149.95,\r\n          status: 'Processing',\r\n          items: [\r\n            { id: 2, name: 'Resistance Bands Pack', quantity: 3, price: 49.99 }\r\n          ]\r\n        },\r\n        {\r\n          id: 'ORD-7849',\r\n          customer: 'Mike Johnson',\r\n          email: 'mike@example.com',\r\n          date: '2023-10-10',\r\n          amount: 89.90,\r\n          status: 'Pending',\r\n          items: [\r\n            { id: 3, name: 'Whey Protein Powder', quantity: 1, price: 59.99 },\r\n            { id: 4, name: 'Performance T-Shirt', quantity: 1, price: 29.99 }\r\n          ]\r\n        },\r\n        {\r\n          id: 'ORD-7848',\r\n          customer: 'Sarah Williams',\r\n          email: 'sarah@example.com',\r\n          date: '2023-10-09',\r\n          amount: 199.50,\r\n          status: 'Delivered',\r\n          items: [\r\n            { id: 1, name: 'Premium Dumbbell Set', quantity: 1, price: 199.50 }\r\n          ]\r\n        },\r\n        {\r\n          id: 'ORD-7847',\r\n          customer: 'Alex Brown',\r\n          email: 'alex@example.com',\r\n          date: '2023-10-08',\r\n          amount: 459.99,\r\n          status: 'Delivered',\r\n          items: [\r\n            { id: 1, name: 'Premium Dumbbell Set', quantity: 1, price: 299.99 },\r\n            { id: 3, name: 'Whey Protein Powder', quantity: 2, price: 59.99 },\r\n            { id: 4, name: 'Performance T-Shirt', quantity: 2, price: 29.99 }\r\n          ]\r\n        },\r\n      ];\r\n\r\n      // Add some more pending orders\r\n      sampleOrders.push(\r\n        {\r\n          id: 'ORD-7846',\r\n          customer: 'Emily Davis',\r\n          email: 'emily@example.com',\r\n          date: '2023-10-07',\r\n          amount: 119.98,\r\n          status: 'Pending',\r\n          items: [\r\n            { id: 3, name: 'Whey Protein Powder', quantity: 2, price: 59.99 }\r\n          ]\r\n        },\r\n        {\r\n          id: 'ORD-7845',\r\n          customer: 'Tom Wilson',\r\n          email: 'tom@example.com',\r\n          date: '2023-10-06',\r\n          amount: 49.99,\r\n          status: 'Pending',\r\n          items: [\r\n            { id: 2, name: 'Resistance Bands Pack', quantity: 1, price: 49.99 }\r\n          ]\r\n        }\r\n      );\r\n\r\n      setOrders(sampleOrders);\r\n      setIsLoading(false);\r\n    };\r\n\r\n    // Simulate API call delay\r\n    setTimeout(fetchOrders, 1000);\r\n  }, []);\r\n\r\n  // Function to update order status\r\n  const updateOrderStatus = (orderId, newStatus) => {\r\n    // In a real app, you would call an API here\r\n    const updatedOrders = orders.map(order => {\r\n      if (order.id === orderId) {\r\n        return { ...order, status: newStatus };\r\n      }\r\n      return order;\r\n    });\r\n\r\n    setOrders(updatedOrders);\r\n  };\r\n\r\n  // Filter orders based on selected status\r\n  const filteredOrders = statusFilter === 'all'\r\n    ? orders\r\n    : orders.filter(order => order.status.toLowerCase() === statusFilter);\r\n\r\n  // Show loading state while fetching data\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"text-center py-10\">\r\n        <p className=\"text-xl text-teal-800\">Loading orders...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-3xl font-bold text-teal-800 mb-6\">Manage Orders</h1>\r\n\r\n      {/* Status filter */}\r\n      <div className=\"mb-6 bg-white p-4 rounded-lg shadow-md\">\r\n        <label className=\"block text-teal-700 mb-2\">Filter by Status:</label>\r\n        <div className=\"flex flex-wrap gap-2\">\r\n          <button\r\n            onClick={() => setStatusFilter('all')}\r\n            className={`px-3 py-1 rounded-full text-sm font-medium ${statusFilter === 'all' ? 'bg-teal-600 text-white' : 'bg-gray-100 text-teal-700'\r\n              }`}\r\n          >\r\n            All Orders\r\n          </button>\r\n          <button\r\n            onClick={() => setStatusFilter('pending')}\r\n            className={`px-3 py-1 rounded-full text-sm font-medium ${statusFilter === 'pending' ? 'bg-orange-500 text-white' : 'bg-orange-100 text-orange-800'\r\n              }`}\r\n          >\r\n            Pending\r\n          </button>\r\n          <button\r\n            onClick={() => setStatusFilter('processing')}\r\n            className={`px-3 py-1 rounded-full text-sm font-medium ${statusFilter === 'processing' ? 'bg-blue-500 text-white' : 'bg-blue-100 text-blue-800'\r\n              }`}\r\n          >\r\n            Processing\r\n          </button>\r\n          <button\r\n            onClick={() => setStatusFilter('delivered')}\r\n            className={`px-3 py-1 rounded-full text-sm font-medium ${statusFilter === 'delivered' ? 'bg-green-500 text-white' : 'bg-green-100 text-green-800'\r\n              }`}\r\n          >\r\n            Delivered\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Order count summary */}\r\n      <div className=\"mb-6\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n          <div className=\"bg-white p-4 rounded-lg shadow-md border-l-4 border-teal-500\">\r\n            <p className=\"text-sm text-gray-500\">Total Orders</p>\r\n            <p className=\"text-2xl font-bold text-teal-800\">{orders.length}</p>\r\n          </div>\r\n          <div className=\"bg-white p-4 rounded-lg shadow-md border-l-4 border-orange-500\">\r\n            <p className=\"text-sm text-gray-500\">Pending Orders</p>\r\n            <p className=\"text-2xl font-bold text-teal-800\">\r\n              {orders.filter(order => order.status === 'Pending').length}\r\n            </p>\r\n          </div>\r\n          <div className=\"bg-white p-4 rounded-lg shadow-md border-l-4 border-blue-500\">\r\n            <p className=\"text-sm text-gray-500\">Processing Orders</p>\r\n            <p className=\"text-2xl font-bold text-teal-800\">\r\n              {orders.filter(order => order.status === 'Processing').length}\r\n            </p>\r\n          </div>\r\n          <div className=\"bg-white p-4 rounded-lg shadow-md border-l-4 border-green-500\">\r\n            <p className=\"text-sm text-gray-500\">Delivered Orders</p>\r\n            <p className=\"text-2xl font-bold text-teal-800\">\r\n              {orders.filter(order => order.status === 'Delivered').length}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Orders Table */}\r\n      <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\r\n        <table className=\"w-full text-sm\">\r\n          <thead>\r\n            <tr className=\"bg-teal-50\">\r\n              <th className=\"px-4 py-2 text-left text-teal-700\">Order ID</th>\r\n              <th className=\"px-4 py-2 text-left text-teal-700\">Customer</th>\r\n              <th className=\"px-4 py-2 text-left text-teal-700\">Date</th>\r\n              <th className=\"px-4 py-2 text-left text-teal-700\">Amount</th>\r\n              <th className=\"px-4 py-2 text-left text-teal-700\">Status</th>\r\n              <th className=\"px-4 py-2 text-right text-teal-700\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"divide-y divide-teal-100\">\r\n            {filteredOrders.length === 0 ? (\r\n              <tr>\r\n                <td colSpan=\"6\" className=\"px-4 py-6 text-center text-teal-600\">\r\n                  No orders found with the selected filter.\r\n                </td>\r\n              </tr>\r\n            ) : (\r\n              filteredOrders.map((order) => (\r\n                <tr key={order.id} className=\"hover:bg-teal-50\">\r\n                  <td className=\"px-4 py-3 text-teal-800 font-medium\">{order.id}</td>\r\n                  <td className=\"px-4 py-3 text-teal-700\">{order.customer}</td>\r\n                  <td className=\"px-4 py-3 text-teal-700\">{order.date}</td>\r\n                  <td className=\"px-4 py-3 text-teal-700\">${order.amount.toFixed(2)}</td>\r\n                  <td className=\"px-4 py-3\">\r\n                    <span className={`inline-block px-2 py-1 rounded-full text-xs font-medium ${order.status === 'Delivered' ? 'bg-green-100 text-green-800' :\r\n                      order.status === 'Processing' ? 'bg-blue-100 text-blue-800' :\r\n                        'bg-orange-100 text-orange-800'\r\n                      }`}>\r\n                      {order.status}\r\n                    </span>\r\n                  </td>\r\n                  <td className=\"px-4 py-3 text-right\">\r\n                    {/* Order details button */}\r\n                    <button\r\n                      onClick={() => {\r\n                        alert(`Order ${order.id} Details:\\n\\nCustomer: ${order.customer}\\nEmail: ${order.email}\\nDate: ${order.date}\\nStatus: ${order.status}\\n\\nItems:\\n${order.items.map(item => `- ${item.name} x${item.quantity} ($${item.price})`).join('\\n')}`);\r\n                      }}\r\n                      className=\"text-teal-600 hover:text-teal-800 mr-2\"\r\n                    >\r\n                      View\r\n                    </button>\r\n\r\n                    {/* Status update dropdown */}\r\n                    {order.status !== 'Delivered' && (\r\n                      <select\r\n                        value={order.status}\r\n                        onChange={(e) => updateOrderStatus(order.id, e.target.value)}\r\n                        className=\"text-sm border border-teal-200 rounded p-1 text-black\"\r\n                      >\r\n                        <option value=\"Pending\">Pending</option>\r\n                        <option value=\"Processing\">Processing</option>\r\n                        <option value=\"Delivered\">Delivered</option>\r\n                      </select>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}}]
}
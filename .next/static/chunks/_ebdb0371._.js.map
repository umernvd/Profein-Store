{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Web%20Engineering/gym-store/src/app/checkout/page.js"],"sourcesContent":["'use client'; // This directive enables client-side interactivity in Next.js\r\n\r\n// Import required hooks and components\r\nimport { useState } from 'react'; // For state management\r\nimport { useRouter } from 'next/navigation'; // For programmatic navigation\r\nimport { useCart } from '@/context/CartContext'; // For cart functionality\r\nimport Link from 'next/link'; // For client-side navigation\r\n// We can import the formatCurrency utility here when using it\r\n// import { formatCurrency } from '@/utils/formatCurrency';\r\n\r\nexport default function CheckoutPage() {\r\n  // Initialize router for navigation after checkout\r\n  const router = useRouter();\r\n\r\n  // Get cart data and functions from context\r\n  const { cart, getCartTotal, clearCart, processOrder } = useCart();\r\n\r\n  // State to store all form field values\r\n  const [formData, setFormData] = useState({\r\n    // Shipping Information\r\n    shippingFirstName: '',\r\n    shippingLastName: '',\r\n    shippingEmail: '',\r\n    shippingPhone: '',\r\n    shippingAddress: '',\r\n    shippingCity: '',\r\n    shippingState: '',\r\n    shippingZip: '',\r\n    // Billing Information\r\n    sameAsShipping: true, // Default to same as shipping\r\n    billingFirstName: '',\r\n    billingLastName: '',\r\n    billingEmail: '',\r\n    billingPhone: '',\r\n    billingAddress: '',\r\n    billingCity: '',\r\n    billingState: '',\r\n    billingZip: '',\r\n    // Payment Information\r\n    paymentMethod: 'COD', // Default to Cash on Delivery\r\n    cardNumber: '',\r\n    cardExpiry: '',\r\n    cardCvc: '',\r\n  });\r\n\r\n  // State to track if order is being processed\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n\r\n  // If cart is empty, show message directing user to products page\r\n  if (cart.length === 0) {\r\n    return (\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n        <div className=\"text-center\">\r\n          <h1 className=\"text-3xl font-bold text-teal-800 mb-4\">Your Cart is Empty</h1>\r\n          <p className=\"text-teal-600 mb-8\">Add items to your cart before proceeding to checkout.</p>\r\n          <Link\r\n            href=\"/products\"\r\n            className=\"inline-block bg-orange-400 text-teal-900 px-8 py-3 rounded-lg font-semibold hover:bg-orange-500 transition duration-300\"\r\n          >\r\n            Browse Products\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Handle form field changes\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      // For checkboxes, use the checked property, otherwise use the value\r\n      [name]: type === 'checkbox' ? checked : value\r\n    }));\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault(); // Prevent default form submission\r\n    setIsProcessing(true); // Set processing state to show loading UI\r\n\r\n    try {\r\n      // Prepare order details object for submission\r\n      const orderDetails = {\r\n        shipping: {\r\n          firstName: formData.shippingFirstName,\r\n          lastName: formData.shippingLastName,\r\n          email: formData.shippingEmail,\r\n          phone: formData.shippingPhone,\r\n          address: formData.shippingAddress,\r\n          city: formData.shippingCity,\r\n          state: formData.shippingState,\r\n          zip: formData.shippingZip,\r\n        },\r\n        // If billing is same as shipping, use shipping details, otherwise use billing details\r\n        billing: formData.sameAsShipping\r\n          ? {\r\n            firstName: formData.shippingFirstName,\r\n            lastName: formData.shippingLastName,\r\n            email: formData.shippingEmail,\r\n            phone: formData.shippingPhone,\r\n            address: formData.shippingAddress,\r\n            city: formData.shippingCity,\r\n            state: formData.shippingState,\r\n            zip: formData.shippingZip,\r\n          }\r\n          : {\r\n            firstName: formData.billingFirstName,\r\n            lastName: formData.billingLastName,\r\n            email: formData.billingEmail,\r\n            phone: formData.billingPhone,\r\n            address: formData.billingAddress,\r\n            city: formData.billingCity,\r\n            state: formData.billingState,\r\n            zip: formData.billingZip,\r\n          },\r\n        paymentMethod: formData.paymentMethod,\r\n        // Only include payment details if online payment is selected\r\n        paymentDetails: formData.paymentMethod === 'ONLINE'\r\n          ? {\r\n            cardNumber: formData.cardNumber,\r\n            cardExpiry: formData.cardExpiry,\r\n            cardCvc: formData.cardCvc,\r\n          }\r\n          : null,\r\n      };\r\n\r\n      // STRAPI INTEGRATION: The processOrder function in CartContext.js \r\n      // will handle the API request to Strapi to create the order\r\n      const result = await processOrder(orderDetails);\r\n\r\n      if (result.success) {\r\n        // Navigate to confirmation page if order was successful\r\n        router.push('/checkout/confirmation');\r\n      } else {\r\n        throw new Error(result.error || 'Failed to process order');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error processing order:', error);\r\n      alert('There was an error processing your order. Please try again.');\r\n    } finally {\r\n      setIsProcessing(false); // Reset processing state regardless of outcome\r\n    }\r\n  };\r\n\r\n  // Reusable input field component for form fields\r\n  const InputField = ({ label, name, type = 'text', required = true, value, onChange }) => (\r\n    <div>\r\n      <label htmlFor={name} className=\"block text-sm font-medium text-teal-800 mb-1\">\r\n        {label}\r\n      </label>\r\n      <input\r\n        type={type}\r\n        id={name}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        required={required}\r\n        className=\"w-full px-3 py-2 border border-teal-200 rounded-md focus:outline-none focus:ring-2 focus:ring-orange-400 focus:border-transparent text-black\"\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n      <h1 className=\"text-3xl font-bold text-teal-800 mb-8\">Checkout</h1>\r\n\r\n      {/* Layout grid: form on the left, order summary on the right */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n        {/* Checkout form - takes 2/3 of screen on large displays */}\r\n        <div className=\"lg:col-span-2\">\r\n          <form onSubmit={handleSubmit} className=\"space-y-8\">\r\n            {/* Shipping Information Section */}\r\n            <div className=\"bg-white p-6 rounded-lg shadow-sm border border-teal-100\">\r\n              <h2 className=\"text-xl font-semibold text-teal-800 mb-4\">Shipping Information</h2>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                {/* First Name field */}\r\n                <InputField\r\n                  label=\"First Name\"\r\n                  name=\"shippingFirstName\"\r\n                  value={formData.shippingFirstName}\r\n                  onChange={handleInputChange}\r\n                />\r\n                {/* Last Name field */}\r\n                <InputField\r\n                  label=\"Last Name\"\r\n                  name=\"shippingLastName\"\r\n                  value={formData.shippingLastName}\r\n                  onChange={handleInputChange}\r\n                />\r\n                {/* Email field */}\r\n                <InputField\r\n                  label=\"Email\"\r\n                  name=\"shippingEmail\"\r\n                  type=\"email\"\r\n                  value={formData.shippingEmail}\r\n                  onChange={handleInputChange}\r\n                />\r\n                {/* Phone field */}\r\n                <InputField\r\n                  label=\"Phone\"\r\n                  name=\"shippingPhone\"\r\n                  type=\"tel\"\r\n                  value={formData.shippingPhone}\r\n                  onChange={handleInputChange}\r\n                />\r\n                {/* Address field - spans both columns */}\r\n                <div className=\"md:col-span-2\">\r\n                  <InputField\r\n                    label=\"Address\"\r\n                    name=\"shippingAddress\"\r\n                    value={formData.shippingAddress}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </div>\r\n                {/* City field */}\r\n                <InputField\r\n                  label=\"City\"\r\n                  name=\"shippingCity\"\r\n                  value={formData.shippingCity}\r\n                  onChange={handleInputChange}\r\n                />\r\n                {/* State field */}\r\n                <InputField\r\n                  label=\"State\"\r\n                  name=\"shippingState\"\r\n                  value={formData.shippingState}\r\n                  onChange={handleInputChange}\r\n                />\r\n                {/* ZIP code field */}\r\n                <InputField\r\n                  label=\"ZIP Code\"\r\n                  name=\"shippingZip\"\r\n                  value={formData.shippingZip}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Billing Information Section */}\r\n            <div className=\"bg-white p-6 rounded-lg shadow-sm border border-teal-100\">\r\n              {/* Checkbox for \"Same as shipping\" option */}\r\n              <div className=\"flex items-center mb-4\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"sameAsShipping\"\r\n                  name=\"sameAsShipping\"\r\n                  checked={formData.sameAsShipping}\r\n                  onChange={handleInputChange}\r\n                  className=\"h-4 w-4 text-orange-400 focus:ring-orange-400 border-teal-300 rounded text-black\"\r\n                />\r\n                <label htmlFor=\"sameAsShipping\" className=\"ml-2 text-sm text-teal-800\">\r\n                  Billing address same as shipping\r\n                </label>\r\n              </div>\r\n\r\n              {/* Only show billing fields if \"Same as shipping\" is unchecked */}\r\n              {!formData.sameAsShipping && (\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  <InputField\r\n                    label=\"First Name\"\r\n                    name=\"billingFirstName\"\r\n                    value={formData.billingFirstName}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                  <InputField\r\n                    label=\"Last Name\"\r\n                    name=\"billingLastName\"\r\n                    value={formData.billingLastName}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                  <InputField\r\n                    label=\"Email\"\r\n                    name=\"billingEmail\"\r\n                    type=\"email\"\r\n                    value={formData.billingEmail}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                  <InputField\r\n                    label=\"Phone\"\r\n                    name=\"billingPhone\"\r\n                    type=\"tel\"\r\n                    value={formData.billingPhone}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                  <div className=\"md:col-span-2\">\r\n                    <InputField\r\n                      label=\"Address\"\r\n                      name=\"billingAddress\"\r\n                      value={formData.billingAddress}\r\n                      onChange={handleInputChange}\r\n                    />\r\n                  </div>\r\n                  <InputField\r\n                    label=\"City\"\r\n                    name=\"billingCity\"\r\n                    value={formData.billingCity}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                  <InputField\r\n                    label=\"State\"\r\n                    name=\"billingState\"\r\n                    value={formData.billingState}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                  <InputField\r\n                    label=\"ZIP Code\"\r\n                    name=\"billingZip\"\r\n                    value={formData.billingZip}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Payment Method Selection */}\r\n            <div className=\"bg-white p-6 rounded-lg shadow-sm border border-teal-100\">\r\n              <h2 className=\"text-xl font-semibold text-teal-800 mb-4\">Payment Method</h2>\r\n              <div className=\"space-y-4\">\r\n                {/* Cash on Delivery option */}\r\n                <div className=\"flex items-center space-x-4\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    id=\"cod\"\r\n                    name=\"paymentMethod\"\r\n                    value=\"COD\"\r\n                    checked={formData.paymentMethod === 'COD'}\r\n                    onChange={handleInputChange}\r\n                    className=\"h-4 w-4 text-orange-400 focus:ring-orange-400 border-teal-300 text-black\"\r\n                  />\r\n                  <label htmlFor=\"cod\" className=\"text-teal-800\">\r\n                    Cash on Delivery (COD)\r\n                  </label>\r\n                </div>\r\n                {/* Online Payment option */}\r\n                <div className=\"flex items-center space-x-4\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    id=\"online\"\r\n                    name=\"paymentMethod\"\r\n                    value=\"ONLINE\"\r\n                    checked={formData.paymentMethod === 'ONLINE'}\r\n                    onChange={handleInputChange}\r\n                    className=\"h-4 w-4 text-orange-400 focus:ring-orange-400 border-teal-300 text-black\"\r\n                  />\r\n                  <label htmlFor=\"online\" className=\"text-teal-800\">\r\n                    Online Payment (Credit/Debit Card)\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Card Information - Only shown if Online Payment is selected */}\r\n            {formData.paymentMethod === 'ONLINE' && (\r\n              <div className=\"bg-white p-6 rounded-lg shadow-sm border border-teal-100\">\r\n                <h2 className=\"text-xl font-semibold text-teal-800 mb-4\">Card Information</h2>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  {/* Card Number field */}\r\n                  <div className=\"md:col-span-2\">\r\n                    <InputField\r\n                      label=\"Card Number\"\r\n                      name=\"cardNumber\"\r\n                      value={formData.cardNumber}\r\n                      onChange={handleInputChange}\r\n                      placeholder=\"1234 5678 9012 3456\"\r\n                    />\r\n                  </div>\r\n                  {/* Expiry Date field */}\r\n                  <InputField\r\n                    label=\"Expiry Date\"\r\n                    name=\"cardExpiry\"\r\n                    placeholder=\"MM/YY\"\r\n                    value={formData.cardExpiry}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                  {/* CVC field */}\r\n                  <InputField\r\n                    label=\"CVC\"\r\n                    name=\"cardCvc\"\r\n                    placeholder=\"123\"\r\n                    value={formData.cardCvc}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Submit Order Button */}\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isProcessing}\r\n              className={`w-full bg-orange-400 text-teal-900 py-3 rounded-lg font-semibold hover:bg-orange-500 transition duration-300 ${isProcessing ? 'opacity-75 cursor-not-allowed' : ''\r\n                }`}\r\n            >\r\n              {isProcessing ? 'Processing...' : `Place Order (${formData.paymentMethod === 'COD' ? 'Cash on Delivery' : 'Pay Now'})`}\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        {/* Order Summary Section - takes 1/3 of screen on large displays */}\r\n        <div className=\"bg-white p-6 rounded-lg shadow-sm border border-teal-100 h-fit\">\r\n          <h2 className=\"text-xl font-semibold text-teal-800 mb-4\">Order Summary</h2>\r\n          <div className=\"space-y-4 mb-4\">\r\n            {/* List each cart item with its price */}\r\n            {cart.map((item) => (\r\n              <div key={item.id} className=\"flex justify-between text-sm\">\r\n                <span className=\"text-teal-600\">\r\n                  {item.name} x {item.quantity}\r\n                </span>\r\n                <span className=\"text-teal-800 font-medium\">\r\n                  ${(item.price * item.quantity).toFixed(2)}\r\n                </span>\r\n              </div>\r\n            ))}\r\n            {/* Subtotal, shipping, and total calculation */}\r\n            <div className=\"border-t border-teal-100 pt-4\">\r\n              <div className=\"flex justify-between text-teal-600\">\r\n                <span>Subtotal</span>\r\n                <span>${getCartTotal().toFixed(2)}</span>\r\n              </div>\r\n              <div className=\"flex justify-between text-teal-600\">\r\n                <span>Shipping</span>\r\n                <span>Free</span>\r\n              </div>\r\n              <div className=\"flex justify-between text-lg font-semibold text-teal-800 mt-4\">\r\n                <span>Total</span>\r\n                <span>${getCartTotal().toFixed(2)}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 822, "column": 0}, "map": {"version":3,"sources":["file://E%3A/Web%20Engineering/gym-store/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}